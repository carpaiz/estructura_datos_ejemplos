package ArbolGeneral;

import java.util.Enumeration;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;


public class ArbolGeneral extends javax.swing.JFrame {

    public ArbolGeneral() {
        initComponents();
        DefaultTreeModel modeloArbol = (DefaultTreeModel) jTree1.getModel();
            modeloArbol.setRoot(null);
        txtConsola.setText("Programa iniciado correctamente..." + System.lineSeparator());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        txtValor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiarArbol = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtConsola = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ejemplo de un Árbol en JAVA");

        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        jLabel2.setText("Ingrese un valor:");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiarArbol.setText("Limpiar");
        btnLimpiarArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarArbolActionPerformed(evt);
            }
        });

        txtConsola.setColumns(20);
        txtConsola.setRows(5);
        jScrollPane2.setViewportView(txtConsola);

        jLabel3.setText("Consola:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtValor)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 25, Short.MAX_VALUE))
                            .addComponent(btnLimpiarArbol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addGap(3, 3, 3)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addGap(19, 19, 19)
                        .addComponent(btnLimpiarArbol))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        try
        {
            TreeSelectionModel tsm = jTree1.getSelectionModel();

            if(tsm.getSelectionCount() > 0)
            {
                DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
                txtValor.setText(nodoSeleccionado.getUserObject().toString());

                txtConsola.setText(txtConsola.getText() + "Nodo seleccionado: " + txtValor.getText() + System.lineSeparator());
            }
        }catch(Exception ex)
        {
            txtConsola.setText(txtConsola.getText() + "Error en jTree1MouseClicked(): " + ex.getMessage() + System.lineSeparator());
        }        
    }//GEN-LAST:event_jTree1MouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try{
            TreeSelectionModel tsm = jTree1.getSelectionModel();

            if(tsm.getSelectionCount() > 0)
            {
                DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();

                DefaultMutableTreeNode nodoNuevo = new DefaultMutableTreeNode(txtValor.getText());
                nodoSeleccionado.add(nodoNuevo);

                TreePath rutaNodo = new TreePath(nodoSeleccionado.getPath());
                
                DefaultTreeModel modeloArbol = (DefaultTreeModel) jTree1.getModel();
                modeloArbol.reload();

                jTree1.setSelectionPath(rutaNodo);
                jTree1.expandPath(rutaNodo);                
                txtConsola.setText(txtConsola.getText() + "Nodo agregado: " + txtValor.getText() + " en: " +  rutaNodo.toString() + System.lineSeparator());
                
            }
            else {
                if (txtValor.getText().length() <= 0) 
                    throw new Exception("¡Ingrese un valor por favor!");
                
                DefaultMutableTreeNode nodoRaiz = new DefaultMutableTreeNode(txtValor.getText());
                DefaultTreeModel modeloArbol = (DefaultTreeModel) jTree1.getModel();
                modeloArbol.setRoot(nodoRaiz);
                
                txtConsola.setText(txtConsola.getText() + "Nodo RAÍZ agregado: " + txtValor.getText() + System.lineSeparator());
            }
        }catch(Exception ex)
        {
            txtConsola.setText(txtConsola.getText() + "Error en btnAgregarActionPerformed(): " + ex.getMessage() + System.lineSeparator());
        }                    
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnLimpiarArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarArbolActionPerformed
        try
        {
            DefaultTreeModel modeloArbol = (DefaultTreeModel) jTree1.getModel();
            modeloArbol.setRoot(null);
            
            txtConsola.setText(txtConsola.getText() + "¡Vaciado del árbol! " + System.lineSeparator());
        }catch(Exception ex)
        {
            txtConsola.setText(txtConsola.getText() + "Error en btnLimpiarArbolActionPerformed(): " + ex.getMessage() + System.lineSeparator());
        }
    }//GEN-LAST:event_btnLimpiarArbolActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try{
            TreeSelectionModel tsm = jTree1.getSelectionModel();
            if(tsm.getSelectionCount() <= 0)
                throw new Exception("¡Ningún nodo para modificar!");
            
            DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
            nodoSeleccionado.setUserObject(txtValor.getText());
            
            TreePath rutaNodo = new TreePath(nodoSeleccionado.getPath());

            DefaultTreeModel modeloArbol = (DefaultTreeModel) jTree1.getModel();
            modeloArbol.reload();

            jTree1.setSelectionPath(rutaNodo);
            jTree1.expandPath(rutaNodo);

            txtConsola.setText(txtConsola.getText() + "Nodo modificado, nuevo valor: " + txtValor.getText() + " en: " +  rutaNodo.toString() + System.lineSeparator());
                
        }catch(Exception ex)
        {
            txtConsola.setText(txtConsola.getText() + "Error en btnModificarActionPerformed(): " + ex.getMessage() + System.lineSeparator());
        }       
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try{
            TreeSelectionModel tsm = jTree1.getSelectionModel();
            if(tsm.getSelectionCount() <= 0)
                throw new Exception("¡Ningún nodo para eliminar!");
            
            DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
            
//            if(nodoSeleccionado == jTree1.getModel().getRoot())
//            {
//                btnLimpiarArbolActionPerformed(evt);
//                return;
//            }
            
            TreePath rutaNodo = new TreePath(nodoSeleccionado.getPath());

            DefaultTreeModel modeloArbol = (DefaultTreeModel) jTree1.getModel();
            modeloArbol.removeNodeFromParent(nodoSeleccionado);
            modeloArbol.reload();

            jTree1.setSelectionPath(rutaNodo);
            jTree1.expandPath(rutaNodo);
                        
            txtConsola.setText(txtConsola.getText() + "Nodo eliminado: " + nodoSeleccionado.getUserObject().toString() + " en: " +  rutaNodo.toString() + System.lineSeparator());
                
        }catch(Exception ex)
        {
            txtConsola.setText(txtConsola.getText() + "Error en btnEliminarActionPerformed(): " + ex.getMessage() + System.lineSeparator());
        } 
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try{
            
            if(txtValor.getText().length() <= 0)
                throw new Exception("¡Ingrese un valor!");
            
            if(jTree1.getModel().getRoot() == null)
                throw new Exception("¡El árbol está vacío!");
            
            DefaultMutableTreeNode nodoEncontrado = null;
            DefaultMutableTreeNode nodoRaiz = (DefaultMutableTreeNode) jTree1.getModel().getRoot();
            
            for (Enumeration e = nodoRaiz.depthFirstEnumeration(); e.hasMoreElements() && nodoEncontrado == null;) 
            {
                DefaultMutableTreeNode nodo = (DefaultMutableTreeNode) e.nextElement();                
                if (txtValor.getText().equals(nodo.getUserObject().toString())) {
                    nodoEncontrado = nodo;
                }
            }
            
            if(nodoEncontrado == null)
            {
                txtConsola.setText(txtConsola.getText() + "¡Valor no encontrado!" + System.lineSeparator());
                return;
            }
            
            TreePath rutaNodo = new TreePath(nodoEncontrado.getPath());
            jTree1.setSelectionPath(rutaNodo);
            jTree1.expandPath(rutaNodo);

            txtConsola.setText(txtConsola.getText() + "Nodo buscado " + nodoEncontrado.getUserObject().toString() + " en: " +  rutaNodo.toString() + System.lineSeparator());
                
        }catch(Exception ex)
        {
            txtConsola.setText(txtConsola.getText() + "Error en btnBuscarActionPerformed(): " + ex.getMessage() + System.lineSeparator());
        } 
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArbolGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArbolGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArbolGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArbolGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ArbolGeneral().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiarArbol;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTree1;
    private javax.swing.JTextArea txtConsola;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
